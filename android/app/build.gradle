apply plugin: 'com.android.application'

def extractDefinedInteger(header, name) {
	return header.find(/(?:^|\n)#define ${name} ([0-9]+)(?:\n|$)/) { a, b -> b }.toInteger()
}

String version_h = file('../../version.h').text
int versionMajor = extractDefinedInteger(version_h, "VERSION_MAJOR")
int versionMinor = extractDefinedInteger(version_h, "VERSION_MINOR")
int versionPatch = extractDefinedInteger(version_h, "VERSION_PATCH")

Properties properties = new Properties()
properties.load(rootProject.file('local.properties').newDataInputStream())
String freetype_src_dir = properties.getProperty("freetype.src.dir")

android {
	signingConfigs {
	}
	compileSdkVersion 25
	buildToolsVersion "25.0.3"
	defaultConfig {
		applicationId "de.lihotzki.pixelflood"
		minSdkVersion 21
		targetSdkVersion 25
		versionName "${versionMajor}.${versionMinor}.${versionPatch}"
		versionCode versionMajor * 10000 + versionMinor * 100 + versionPatch
		testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
		externalNativeBuild {
			cmake {
				if (freetype_src_dir != null) {
					arguments "-DFREETYPE_SRC_DIR=" + rootProject.file(freetype_src_dir).getPath()
				}
				cppFlags "-std=c++11 -fexceptions"
			}
		}
	}
	buildTypes {
		release {
			minifyEnabled false
		}
		debug {
		}
	}
	externalNativeBuild {
		cmake {
			path "../../CMakeLists.txt"
		}
	}
}

dependencies {
	compile fileTree(include: ['*.jar'], dir: 'libs')
	androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
		exclude group: 'com.android.support', module: 'support-annotations'
	})
	compile 'com.android.support:appcompat-v7:25.2.0'
	testCompile 'junit:junit:4.12'
}
